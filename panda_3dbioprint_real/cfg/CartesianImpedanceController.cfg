#!/usr/bin/env python
PACKAGE = "panda_3dbioprint_real"

from dynamic_reconfigure.parameter_generator_catkin import *

# Instantiate a parameter generator
gen = ParameterGenerator()

# gen.add Parameters:
#   name - a string which specifies the name under which this parameter should be stored
#   paramtype - defines the type of value stored, and can be any of int_t, double_t, str_t, or bool_t
#   level - A bitmask which will later be passed to the dynamic reconfigure callback. When the callback is called all of the level values for parameters that have been changed are ORed together and the resulting value is passed to the callback.
#   description - string which describes the parameter
#   default - specifies the default value
#   min - specifies the min value (optional and does not apply to strings and bools)
#   max - specifies the max value (optional and does not apply to strings and bools) 

# gen.add(name, paramtype, level, description, default, min, max)

# The controller is a Cartesian Impedance controller. Because it is suppose to interact with a 
# person in direct contact, the integrative gains should be discarded.
# The gains are for Damping (D) and Stiffness (K) environment behaviour.

# Stiffness gains
gen.add("Kpx", double_t, 0, "Stiffness gain for PANDA position x", 500, 0, 1000)
gen.add("Kpy", double_t, 0, "Stiffness gain for PANDA position y", 500, 0, 1000)
gen.add("Kpz", double_t, 0, "Stiffness gain for PANDA position z", 500, 0, 1000)
gen.add("Kox", double_t, 0, "Stiffness gain for PANDA orientation x", 100, 0, 200)
gen.add("Koy", double_t, 0, "Stiffness gain for PANDA orientation y", 100, 0, 200)
gen.add("Koz", double_t, 0, "Stiffness gain for PANDA orientation z", 100, 0, 200)

# Damping gains
gen.add("Dpx", double_t, 0, "Damping gain for PANDA position x", 50, 0, 100)
gen.add("Dpy", double_t, 0, "Damping gain for PANDA position y", 50, 0, 100)
gen.add("Dpz", double_t, 0, "Damping gain for PANDA position z", 50, 0, 100)
gen.add("Dox", double_t, 0, "Damping gain for PANDA orientation x", 10, 0, 20)
gen.add("Doy", double_t, 0, "Damping gain for PANDA orientation y", 10, 0, 20)
gen.add("Doz", double_t, 0, "Damping gain for PANDA orientation z", 10, 0, 20)

# Nullspace gains
gen.add("Kpn", double_t, 0, "Stiffnes gain for PANDA nullspace", 10, 0, 200)

exit(gen.generate(PACKAGE, "panda_3dbioprint_real", "CartesianImpedanceController"))