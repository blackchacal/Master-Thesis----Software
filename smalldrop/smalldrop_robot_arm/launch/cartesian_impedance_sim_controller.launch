<launch>
  <param name="robot_description" command="$(find xacro)/xacro $(find smalldrop_robot_arm)/robots/panda_arm_hand.urdf.xacro" />
  
  <!-- Robot gains setup and test arguments -->
  <arg name="gains" default="false" />

  <!-- GAZEBO arguments -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="true"/>

  <!--launch GAZEBO with own world configuration -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model panda" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find smalldrop_robot_arm)/config/panda_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="cartesian_impedance_sim_controller joint_state_controller panda_hand_controller" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <node if="$(arg gains)" name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find smalldrop_rviz)/rviz/config_tests.rviz" />
</launch>